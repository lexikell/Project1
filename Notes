#Linux FASTQ processing commands and other notes

#Login compute canada
>ssh akelling@cedar.computecanada.ca

#to run line by line in CC:
#request 2 nodes for 1h
>salloc --time=1:0:0 --ntasks=2 --account=def-juniacke

===================DAD ORGANIZE===========
~/<xxx>/
Project_202107
	/00_scripts
	/10_raw_data
	/20_work_files
	/30_clean_data
	/50_final

BIN
- dad linked the bin folder to your original map (idk what it was called)
	so now when something is run, it will look in bin - no matter where you are 
	this is where you can keep your scripts (.sh or .py) and they will always be searched in order to be called upon
- this is also where dad put “work” which is where your original data folders are - so it’s like a shortcut for the full OG data folder
- can use “source work” can it will place you where “work” lead -> the OG data folder 
-if you run “~/bin/work” just by itself it will run “ls -l” on that OG data file and show you what’s in there (in work) 
	-he just made a script called "work" that first cd's to that folder and then opens it with ls -l

***********************************
NOTES: BASIC COMMANDS

-"cd .." moves you up one directory 
-DO NOT
	mv
	this corrupts your file(?)
-command “partition-stats” 
-cntl+C will quit a running command
-scancel <jobid> will quit the job 
-sq command for checking running jobs status 
- sacct checks all jobs (previous jobs)
-choosing runtime and memory etc: 
	use interactive nodes (note file)
	salloc --time=1:0:0 --ntasks=2 --account=def-juniacke
	then "exit" 
- “ls -a” is a way to see hidden files in your dir 
	- hidden bc they’re background files that you dont nec need to see all the time
- the space bar and B button lets you scroll pages through a lot of output lines
-“ls -R” shows files in the dir or home and what are in those files (1 level)
-control+C lets you cancel whatever command you just said
- “head -n” is the first n lines of whatever file (or tail for the end)
	defaults to 10 lines if you don’t specify n
- “./“ is wherever dir you are in currently (so you don’t have to write out the whole path)
-“which+xxx” tells you where xxx is located 
- “ls -l” tells us what’s in the dir AND what it is (file or dir) and permissions 
-“pwd” tells us where you are 
-“tree” shows what is in what dirs
-"module list" checks what is loaded
    NOTE: you have to re-install each time (most likely)
-no hup is a way to run your command in the background and not worry about logging out
	"nohup sh yourscript.sh" when wanting to run
- ls -sh "file" will show the size of the file 
- count how many times a word comes up in a file 
	- -o: Only outputs the matching parts (i.e., the occurrences of the word) rather than the whole line.
	- -w: Matches the whole word, preventing partial matches.
	grep 'ING3' annoIDsN_TSS2Kb_19Sep22.csv | wc -l
- find a whatever in terminal
	- find ~ -name .bash_profile
	- ^this will find where .bash_profile is located 
	- BUT when I did this it's hidden! So just nano it anyway and you'll be able to fix it 

*******************************
MIRANDA
So the main functions I use are: 
cd which takes you to your folders 
sbatch which starts your runs 
squeue -u which tells you your position in the queue
scp which allows you to download files from the server to your computer 
ssh which allows you to log in to compute Canada 
rm removes files you don’t need anymore 
emacs filename which can be used to create your bash shell 
ls tells you what inside each folder you are in 
cat allows you to open the file to look at it 

 So to upload a file you just need to open a terminal window without logging into cedar but navigate to the folder where all your data is then type 
scp filename yourcomputecanadausername:/yourcomputecanadapathway

------------------------
First notes:

# how many seq are in your file? :: divide by four to count just seq lines
> cat 2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/PAbJUL1_S1_L001_R1_001.fastq.gz | echo $((`wc -l`/4))

#How many lines are in your file? 
> cat 2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/PAbJUL1_S1_L001_R1_001.fastq.gz | echo wc -l

------------------------
GREAT
#moved .bed files to local 
scp akelling@cedar.computecanada.ca:/home/akelling/projects/def-juniacke/akelling/Data1/2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/18Sept21/macs2/blacklistRemoved/PAbJUL3_MACS2broad_blacklistRemovedEDIT_18Sept21.bed /Users/lexikellington/seq

#^this moves the file from the server to the local BUT YOU MUST USE THIS COMMAND IN THE LOCAL TERMINAL

#then removed the last columns of the bed file so that it only contained the Chr, start, end, and name 
cut -f-4 <PAbJUL7_MACS2broad_blacklistRemoved_18Sept21.broadPeak >PAbJUL7_MACS2broad_blacklistRemovedEDIT_18Sept21.bed
#now this can upload 

scp akelling@cedar.computecanada.ca:/home/akelling/projects/def-juniacke/akelling/project_202107/10_rawdata/OutsideData/Hao2018/Hao2018_FLAGOGG1.bam /Users/lexikellington/seq

scp /Users/lexikellington/seq/seqMINER/seqMINER_1.3.4 

rep 1
/home/akelling/projects/def-juniacke/akelling/Data1/2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY
rep 2 
/home/akelling/projects/def-juniacke/akelling/project_202107/20_aligned
-------------------------
MOVING SAMPLES

#N and N IgG
SN=$WORKDIR/PAbJUL1
CN=$WORKDIR/"CAbJUL2"
#H and H IgG
SN=$WORKDIR/"PAbJUL3"
CH=$WORKDIR/"CAbJUL4"
#8% and 8% IgG
S8=$WORKDIR/"PAbJUL5"
C8=$WORKDIR/"CAbJUL6"
#5% and 5% IgG
S5=$WORKDIR/"PAbJUL7"
C5=$WORKDIR/"CAbJUL8"

scp /Users/lexikellington/downloads/GSM2902624_HEK293_ATAC_high_depth_bio1_tech1.bw akelling@cedar.computecanada.ca:/home/akelling/projects/def-juniacke/akelling/project_202107/10_rawdata/OutsideData/Calviello2019

to local
scp akelling@cedar.computecanada.ca:/home/akelling/projects/def-juniacke/akelling/Data1/2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/18Sept21/macs2/blacklistRemoved/PAbJUL7_MACS2broad_blacklistRemovedEDIT_18Sept21.bed /Users/lexikellington/seq

10_raw_data:
	Rep1 = 2I7I3XE
	Rep2 = 111021AKellington
		/home/akelling/projects/def-juniacke/akelling/project_202107/10_rawdata/111021AKellington
		8 samples; each in 4 lanes; each lane has 2 reads
		after seperate QC, reads were cat together before BWA 
		
---------------------------
CC course notes:

-idk what this is but their ppt has this: (you should test it later)
	- #Very handy for copying, compiling tasks. Avoid ssh timeout:
     $ screen -S myrun
     …
     ctrl+a d
     $ screen –r myrun

-they also used "sq" to check on the job and how it's running
	- but they also used "top -u $USER" to see a breakdown of how it's running(?) 